{"version":3,"file":"fsm.js","sourceRoot":"","sources":["fsm.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { RouterSlot, IRoutingInfo, IRoute, queryString, basePath, isPathActive, GLOBAL_ROUTER_EVENTS_TARGET } from 'router-slot';\nimport { RouteStateController } from '../../../../src/xstate-route-controller';\nimport ActorController from '@lit-app/actor'\nimport { ContextFrom, assertEvent, assign, createActor, fromPromise, setup } from 'xstate';\nimport { sharedStyles } from '../../styles';\nimport { StateController } from '@lit-app/state';\nimport type { MachineParams } from '@lit-app/actor/src/types';\n\ntype EventT = MachineParams<{\n\t'context.id': { readonly id: string }\n\t'NEXT': {}\n}>;\n\ntype ContextT = {\n\tname: string;\n\tid: string;\n};\n\ntype RouteMetaDataT = {\n\ttitle?: string;\n\txstate?: string; // a path to xstate machine\n};\n\nconst machine = setup({\n\ttypes: {} as {\n\t\tevents: EventT\n\t\tcontext: ContextT\n\t},\n\tactions: {\n\t\tsetID: assign({\n\t\t\tid: ({ event }) => {\n\t\t\t\tassertEvent(event, 'context.id');\n\t\t\t\treturn event.params.id;\n\t\t\t},\n\t\t})\n\t},\n\tguards: {\n\t\tpreventOne: ({ context }) => {\n\t\t\treturn (Number(context.id) * 1) > 123;\n\t\t}\n\t}\n\n\n}).createMachine({\n\tid: 'fsm',\n\tinitial: 'one',\n\n\tcontext: {\n\t\tname: 'fsm',\n\t\tid: '0'\n\t},\n\ton: {\n\t\t'context.id': {\n\t\t\tactions: 'setID',\n\t\t},\n\t},\n\tstates: {\n\t\tone: {\n\t\t\ton: {\n\t\t\t\tNEXT: 'two'\n\t\t\t},\n\t\t\troute: {\n\t\t\t\tguard: 'preventOne',\n\t\t\t}\n\t\t},\n\t\ttwo: {\n\t\t\ton: {\n\t\t\t\tNEXT: 'one'\n\t\t\t},\n\t\t\troute: {}\n\t\t}\n\t}\n});\n\nconst Routes: IRoute<RouteMetaDataT>[] = [\n\t{\n\t\tpath: \"one\",\n\t\tdata: {\n\t\t\ttitle: \"Page one\",\n\t\t\txstate: \"one\"\n\t\t},\n\t\tcomponent: () => html`\n\t\t\t<h3>Page one</h3>\n\t\t\t<p>Page one content</p>\n\t\t`\n\t},\n\t{\n\t\tpath: \":id/two\",\n\t\tdata: {\n\t\t\ttitle: \"Page two\",\n\t\t\txstate: \"two\"\n\t\t},\n\t\tcomponent: (info?: IRoutingInfo) => html`\n\t\t\t<h3>Page 2</h3>\n\t\t\t<p>Page two content - ${info?.match.params.id}</p>\n\t\t`\n\t},\n\n\t{\n\t\tpath: \"**\",\n\t\tredirectTo: \"one\"\n\t}\n];\n\n/**\n * ActorController is a lit controller wrapping the machine\n * and adding reactive properties for rendering (lit renders on state change)\n */\nconst stateActor = new ActorController(machine);\n\n/**\n *  \n */\n\n@customElement('fsm-component')\nexport default class FsmComponent extends LitElement {\n\n\trouteStateController!: RouteStateController;\n\tbindStateActor = new StateController(this, stateActor)\n\n\t@query('router-slot') router!: RouterSlot;\n\n\tstatic override styles = [\n\t\tsharedStyles\n\t];\n\n\n\toverride firstUpdated(props: PropertyValues) {\n\n\t\tsuper.firstUpdated(props);\n\n\t\tthis.router.add(Routes, true);\n\t\tstateActor.start();\n\t\tthis.routeStateController = new RouteStateController(this, stateActor.actor, this.router);\n\n\t\t// this is needed for making links work\n\t\tGLOBAL_ROUTER_EVENTS_TARGET.addEventListener(\"changestate\", () => {\n\t\t\tthis.requestUpdate();\n\t\t})\n\t}\n\n\toverride render() {\n\t\tconst isOneActive = stateActor.snapshot.can({ type: 'xstate.route.one' });\n\t\treturn html`\n\t\t\t<h2>xstate-route Controller component</h2>\n\t\t\t<p>This component demonstrates how to use xstate-route-controller. The Controller binds <a href=\"https://github.com/statelyai/xstate\" target=\"_blank\">xstate  machine actors</a> with <a href=\"https://github.com/andreasbm/router-slot\" target=\"_blank\">router-slot router</a></p>\n\t\t\t<h3>Navigation:</h3>\n\t\t\t<p>Click on the links below to navigate to different pages. Activating links will match the state machine with the current route.</p>\n\t\t\t<div>\n\t\t\t\t<a ?disabled=${!isOneActive} href=\"${location.origin}/home/fsm/one${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}home/fsm/one`)}\">Page One (${isOneActive ? 'o.k.' : 'inactive'})</a>\n\t\t\t\t<a href=\"${location.origin}/home/fsm/123/two${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}home/fsm/123/two`)}\">Page Two (id:123)</a>\n\t\t\t\t<a href=\"${location.origin}/home/fsm/456/two${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}home/fsm/456/two`)}\">Page Two (id:456)</a>\n\t\t\t</div>\n\t\t\t<h4>Pages activated by router-slot (Outlet)</h4>\n\t\t\t<router-slot></router-slot>\n\t\t\t<h4>Machine Context State (Value and context.id)</h4>\n\t\t\t<div>\n\t\t\t\t<div>Current State Value: ${stateActor.snapshot.value}</div>\n\t\t\t\t<div>Current Context ID: ${stateActor.context.id}</div>\n\t\t\t\t<button @click=\"${() => stateActor.send({ type: 'NEXT' })}\">Next State</button>\n\t\t\t\t<button @click=\"${() => stateActor.send({ type: 'context.id', params: { id: 111 } })}\">Set Context ID</button>\n\t\t\t</div>\n\t\t`;\n\t}\n\n}\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t'fsm-component': FsmComponent;\n\t}\n}\n"]}