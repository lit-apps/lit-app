{"version":3,"file":"xstate-route-controller.test.js","sourceRoot":"","sources":["xstate-route-controller.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, PropertyValues, html } from \"lit\";\nimport { customElement, query } from 'lit/decorators.js';\nimport { afterEach, beforeEach, describe, expect, it } from 'vitest';\n\nimport { GLOBAL_ROUTER_EVENTS_TARGET, IRoute, IRoutingInfo, RouterSlot, basePath, isPathActive, queryString } from 'router-slot';\n\nimport ActorController from '@lit-app/actor';\nimport type { MachineParams } from '@lit-app/actor/src/types';\nimport { StateController } from '@lit-app/state';\nimport fixture, { fixtureCleanup } from '@lit-app/testing/fixture';\nimport { assertEvent, assign, setup } from 'xstate';\nimport { RouteStateController } from './xstate-route-controller';\n\nexport function addBaseTag(path: string = \"/\") {\n  const $base = document.createElement(\"base\");\n  $base.href = `/`;\n  document.head.appendChild($base);\n  return $base;\n}\n\ntype EventT = MachineParams<{\n  'context.id': { readonly id: string }\n  'NEXT': {}\n}>;\n\ntype ContextT = {\n  name: string;\n  id: string;\n};\n\ntype RouteMetaDataT = {\n  title?: string;\n  xstate?: string; // a path to xstate machine\n};\n\nafterEach(fixtureCleanup);\n\ndescribe('RouteStateController', () => {\n\n  const machine = setup({\n    types: {} as {\n      events: EventT\n      context: ContextT\n    },\n    actions: {\n      setID: assign({\n        id: ({ event }) => {\n          assertEvent(event, 'context.id');\n          return event.params.id\n        },\n      })\n    },\n    guards: {\n      preventOne: ({ context }) => {\n        return (Number(context.id) * 1) > 123;\n      }\n    }\n\n\n  }).createMachine({\n    id: 'fsm',\n    initial: 'one',\n\n    context: {\n      name: 'fsm',\n      id: '1'\n    },\n    on: {\n      'context.id': {\n        actions: 'setID',\n      },\n    },\n    states: {\n      one: {\n        on: {\n          NEXT: 'two'\n        },\n        route: {\n          guard: 'preventOne',\n        }\n      },\n      two: {\n        on: {\n          NEXT: 'one'\n        },\n        route: {}\n      }\n    }\n  });\n\n  const Routes: IRoute<RouteMetaDataT>[] = [\n    {\n      path: \"one\",\n      data: {\n        title: \"Page one\",\n        xstate: \"one\"\n      },\n      component: () => html`\n        <h3>Page one</h3>\n        <p>Page one content</p>\n      `\n    },\n    {\n      path: \":id/two\",\n      data: {\n        title: \"Page two\",\n        xstate: \"two\"\n      },\n      component: (info?: IRoutingInfo) => html`\n        <h3>Page 2</h3>\n        <p>Page two content - ${info?.match.params.id}</p>\n      `\n    },\n\n    {\n      path: \"**\",\n      redirectTo: \"one\"\n    }\n  ];\n\n\n  const stateActor = new ActorController(machine);\n\n\n  @customElement('fsm-component')\n  class FsmComponent extends LitElement {\n\n    routeStateController!: RouteStateController;\n    /**\n     * StateController is a lit controller wrapping the machine\n     * and adding reactive properties for rendering (lit renders on state change)\n     */\n    bindStateActor = new StateController(this, stateActor)\n\n    @query('router-slot') router!: RouterSlot;\n\n    override firstUpdated(props: PropertyValues) {\n\n      super.firstUpdated(props);\n\n      this.router.add(Routes, true);\n      stateActor.start();\n      this.routeStateController = new RouteStateController(this, stateActor.actor, this.router);\n\n      // this is needed for making links work\n      GLOBAL_ROUTER_EVENTS_TARGET.addEventListener(\"changestate\", () => {\n        this.requestUpdate();\n      })\n    }\n\n    override render() {\n      const isOneActive = stateActor.snapshot.can({ type: 'xstate.route.one' });\n      return html`\n\t\t\t<h2>xstate-route Controller component</h2>\n\t\t\t<p>This component demonstrates how to use xstate-route-controller. The Controller binds <a href=\"https://github.com/statelyai/xstate\" target=\"_blank\">xstate  machine actors</a> with <a href=\"https://github.com/andreasbm/router-slot\" target=\"_blank\">router-slot router</a></p>\n\t\t\t<h3>Navigation:</h3>\n\t\t\t<p>Click on the links below to navigate to different pages. Activating links will match the state machine with the current route.</p>\n\t\t\t<div>\n\t\t\t\t<a ?disabled=${!isOneActive} href=\"${location.origin}/one${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}one`)}\">Page One (${isOneActive ? 'o.k.' : 'inactive'})</a>\n\t\t\t\t<a href=\"${location.origin}/123/two${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}123/two`)}\">Page Two (id:123)</a>\n\t\t\t\t<a href=\"${location.origin}/456/two${queryString()}\" ?data-active=\"${isPathActive(`${basePath()}456/two`)}\">Page Two (id:456)</a>\n\t\t\t</div>\n\t\t\t<h4>Pages activated by router-slot (Outlet)</h4>\n\t\t\t<router-slot></router-slot>\n\t\t\t<h4>Machine Context State (Value and context.id)</h4>\n\t\t\t<div>\n\t\t\t\t<div>Current State Value: ${stateActor.snapshot.value}</div>\n\t\t\t\t<div>Current Context ID: ${stateActor.context.id}</div>\n\t\t\t\t<button @click=\"${() => stateActor.send({ type: 'NEXT' })}\">Next State</button>\n\t\t\t\t<button @click=\"${() => stateActor.send({ type: 'context.id', params: { id: '111' } })}\">Set Context ID</button>\n\t\t\t</div>\n\t\t`;\n    }\n\n  }\n\n  async function setupTest(\n    template = html`<fsm-component></fsm-component>`\n  ) {\n    const element = await fixture<FsmComponent>(template);\n    if (!element) {\n      throw new Error('Could not query rendered <lapp-test-star>.');\n    }\n\n    const buttons = element.renderRoot.querySelectorAll('button') as NodeListOf<HTMLButtonElement>\n    const links = element.renderRoot.querySelectorAll('a') as NodeListOf<HTMLAnchorElement>\n\n    return {\n      element,\n      nextButton: buttons[0],\n      setIDButton: buttons[1],\n      linkOne: links[2],\n      linkTwo123: links[3],\n      linkTwo456: links[4],\n\n    };\n  }\n\n  beforeEach(async () => {\n    addBaseTag()\n  });\n  afterEach(fixtureCleanup);\n\n  it('initializes the component', async () => {\n    const { element } = await setupTest();\n    expect(element).toBeInstanceOf(FsmComponent);\n    expect(stateActor.value).toEqual('one');\n  });\n  it('initializes stateActor', async () => {\n    expect(stateActor.value).toEqual('one');\n  });\n\n  it('sets window location ', async () => {\n    await setupTest();\n    const url = '/one';\n    console.log('path Name', window.location.pathname);\n    expect(window.location.pathname).toMatch(url);\n\n  });\n\n  it('keep state and URL in sync (state -> URL)', async () => {\n    const {\n      nextButton,\n      setIDButton,\n      element,\n\n    } = await setupTest();\n\n    let url = '/1/two';\n    nextButton.click();\n    await element.updateComplete;\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('1');\n\n    url = '/111/two';\n    setIDButton.click();\n    await element.updateComplete;\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('111');\n\n    url = '/one';\n    nextButton.click();\n    await element.updateComplete;\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('one');\n    expect(stateActor.context.id).toEqual('111');\n\n  });\n\n  it('keep state and URL in sync (URL -> state)', async () => {\n    const {\n      element,\n      linkOne,\n      linkTwo123,\n      linkTwo456\n    } = await setupTest();\n\n\n    let url = '/123/two';\n    linkTwo123.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('123');\n\n    url = '/456/two';\n    linkTwo456.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('456');\n\n    url = '/one';\n    linkOne.click();\n    await element.updateComplete;\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('one');\n    expect(stateActor.context.id).toEqual('456');\n  });\n\n  it('should honor guarded routes', async () => {\n\n    const {\n      linkOne,\n      linkTwo123,\n      linkTwo456\n    } = await setupTest();\n\n    let url = '/123/two';\n    linkTwo123.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('123');\n\n    linkOne.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch(url);\n    expect(stateActor.value).toEqual('two');\n    expect(stateActor.context.id).toEqual('123');\n\n    linkTwo456.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n    linkOne.click();\n    await new Promise((resolve) => setTimeout(resolve, 30));\n\n    expect(window.location.pathname).toMatch('/one');\n    expect(stateActor.value).toEqual('one');\n    expect(stateActor.context.id).toEqual('456');\n\n\n  })\n});\n\n"]}